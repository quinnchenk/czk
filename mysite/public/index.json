[{"body":"","link":"https://yyczk.netlify.app/","section":"","tags":null,"title":""},{"body":"","link":"https://yyczk.netlify.app/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://yyczk.netlify.app/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"","link":"https://yyczk.netlify.app/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://yyczk.netlify.app/categories/technology/","section":"categories","tags":null,"title":"Technology"},{"body":"","link":"https://yyczk.netlify.app/tags/%E6%95%B0%E4%BB%93/","section":"tags","tags":null,"title":"数仓"},{"body":"关于数仓的建模有两种基本的模型\n数仓建模的模型 关于数仓的建模有两种基本的模型  关系建模 从全企业的高度设计一个3NF（三范式）模型的方法，用实体加关系描述的数据模型描述企业和业务架构。在范式理论上符合三范式，站在企业角度面向主题抽象，而不是针对某个具体业务流程的实体对象关系抽象。它更多是面向数据的整合和一致性，正如Inmon所希望达到的“single version of the truth”。典型代表就是雪花模型 维度模型 维度建模以分析决策的需求出发构建模型，构建的数据模型为分析需求服务，因此它重点解决用户如何快速完成分析需求，同时还有较好的大规模复杂查询的响应性能，更直接面向业务。 为什么维度建模是数仓/商业智能项目成功的关键？ 因为不管我们的数据量从GB到TG 还是PB，虽然数量越来越大，但是数据展现要获得成功，就必须建立在简单性的基础上，而维度建模就是时刻考虑如何能提供简单性，以业务为驱动，以用户理解性和查询性能为目标。典型的代表就是星型模型。  维度模型分为：事实表和维度表  事实表： 事实表用来记录具体事件，包含了每个事件的具体要素，以及具体发生的事情。事实就是主干，简明扼要的介绍一个事实。  事实表的特征：  每一个事实表的行包括有可加性数值的度量值； 与维度表相连接的外键，通常具有两个和两个以上的外键； 记录非常多行数 内容相对窄即列数较少（主要是外键id和度量值） 经常发生变化，每天会新增加很多   事实表的分类：  事务型事实表 以每一个事务或事件为单位，例如一个销售订单记录，一笔支付记录等，作为事实表里的一行数据。一旦事务被提交，事实表数据被插入，数据就不再进行更改，其更新方式为增量更新。 周期型快照事实表 表中不会保留所有数据，只保留固定时间间隔的数据，例如每天或者每月的销售额或者每月的账户余额等。 例如购物车，有加减商品，随时都有可能变化，但是我们更关心每天结束时这里面有多少商品，方便我们后期统计。 累计型事实表 这种表用于跟踪业务事实的变化。例如，数仓中可能需要累积或者存储订单 从下单开始，到订单商品被打包、运输、和签收的各个业务阶段的时间点数据来跟踪订单的进展情况。当这个业务过程进行时，事实表的记录也要不断更新。 累无事实的事实表 该类事实表是没有数字化的值但是还有      ","link":"https://yyczk.netlify.app/post/%E6%95%B0%E4%BB%93%E5%BB%BA%E6%A8%A1/","section":"post","tags":["数仓"],"title":"数仓建模"},{"body":"The \u0026quot;Notices\u0026quot; shortcode enables you to call out pieces of information - sidebars, warnings, tips, etc.\nTo create a notice on a page, you can use the notice shortcode.\nYou use the notice shortcode, with the first parameter being one of note, info, tip, and warning. Then add a title for your note in quotes as the second parameter. The inner body of the note can be whatever markdown you want to create.\nThe following shortcode syntax within a markdown doc:\n1{{% notice note \u0026#34;Note\u0026#34; %}} 2This is a standard \u0026#34;note\u0026#34; style. 3{{% /notice %}} will render as:\nNote\rThis is a standard \u0026quot;note\u0026quot; style.\n\rThe other three variants follow.\nInfo\rHere is the \u0026quot;info\u0026quot; style.\n\rTip\rHere is a \u0026quot;tip\u0026quot; variant of a notice.\n\rWarning\rHere is the \u0026quot;warning\u0026quot; flavor of a notice.\n\rAlso note that the content of a notice can contain anything you could put on a normal page - as shown below:\nComplex Notices are Possible!\rThis is a notice that has a lot of various kinds of content in it.\n Here is a bulleted list With more than one bullet  And even more than one level    Code blocks are fine here, too....\n1public void SayHello() 2{ 3Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); 4} \r\rProductivity Booster!\rIf you're using VS Code for your editing, copy the .vscode\\clarity.code-snippets file into a .vscode root folder on your repo. This will enable you to type note then \u0026lt;tab\u0026gt; then choose with up/down arrows which flavor notice you want, then \u0026lt;tab\u0026gt; again to provide a title, then \u0026lt;tab\u0026gt; to add your content!\n\r\r\r\r\rTo use the snippet, you need to first enable quickSuggestions for Markdown (one time only):\n Go to Preferences-\u0026gt;Settings then search for quickSuggestions Follow the link to Edit in settings.json Toward the bottom of the file, paste in the following JSON:  1\u0026#34;[markdown]\u0026#34;: { 2\u0026#34;editor.quickSuggestions\u0026#34;: true 3} Close and save the settings.  \r","link":"https://yyczk.netlify.app/post/notices/","section":"post","tags":null,"title":"Using Notices"},{"body":"","link":"https://yyczk.netlify.app/archives/","section":"","tags":null,"title":""},{"body":"","link":"https://yyczk.netlify.app/tags/css/","section":"tags","tags":null,"title":"css"},{"body":"","link":"https://yyczk.netlify.app/tags/featured/","section":"tags","tags":null,"title":"featured"},{"body":"","link":"https://yyczk.netlify.app/tags/html/","section":"tags","tags":null,"title":"html"},{"body":"","link":"https://yyczk.netlify.app/tags/markdown/","section":"tags","tags":null,"title":"markdown"},{"body":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nImages Images can be local or remote, and can have alt text and a caption.\nAn example of a local image with alt text. Because no title is provided, the image uses the alt text as its caption:\n\r\r\r\r\rAn example of a remote image. The alt text is the same (for screen readers and in cases when the image doesn't load) but because a separate title is provided, the title is used for the caption:\n\r\rThis is Jane Doe\r\r\rIf an image doesn't load, Hugo Clarity will provide an error message with some information to help you diagnose the issue:\n\r\r\rAn example of an error message for a broken image\r\r\rBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don't communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren't part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;!-- this line is extraneous 2Error from server (Forbidden): deployments.apps is forbidden: User \u0026#34;chiptest\u0026#34; cannot create resource \u0026#34;deployments\u0026#34; in API group \u0026#34;apps\u0026#34; in the namespace \u0026#34;default\u0026#34; --\u0026gt; 11\u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Code block with Hugo's internal highlight shortcode 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike's talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","link":"https://yyczk.netlify.app/post/markdown-syntax/","section":"post","tags":["markdown","css","html","themes","featured"],"title":"Markdown Syntax Guide"},{"body":"","link":"https://yyczk.netlify.app/series/","section":"series","tags":null,"title":"Series"},{"body":"","link":"https://yyczk.netlify.app/categories/syntax/","section":"categories","tags":null,"title":"syntax"},{"body":"","link":"https://yyczk.netlify.app/tags/themes/","section":"tags","tags":null,"title":"themes"},{"body":"","link":"https://yyczk.netlify.app/categories/themes/","section":"categories","tags":null,"title":"themes"},{"body":"","link":"https://yyczk.netlify.app/series/themes-guide/","section":"series","tags":null,"title":"Themes Guide"},{"body":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","link":"https://yyczk.netlify.app/post/placeholder-text/","section":"post","tags":["markdown","text"],"title":"Placeholder Text"},{"body":"","link":"https://yyczk.netlify.app/tags/text/","section":"tags","tags":null,"title":"text"},{"body":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  1{{ if or .Params.math .Site.Params.math }} 2{{ partial \u0026#34;math.html\u0026#34; . }} 3{{ end }}  To enable KaTex globally set the parameter math to true in a project's configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","link":"https://yyczk.netlify.app/post/math-typesetting/","section":"post","tags":null,"title":"Math Typesetting"},{"body":"","link":"https://yyczk.netlify.app/tags/emoji/","section":"tags","tags":null,"title":"emoji"},{"body":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site's configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1.emoji { 2font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; 3}","link":"https://yyczk.netlify.app/post/emoji-support/","section":"post","tags":["emoji"],"title":"Emoji Support"},{"body":"一个很地道的程序员 需要制作个人博客可以加微信：czk1111 咨询哦 ","link":"https://yyczk.netlify.app/about/","section":"","tags":null,"title":"关于我"},{"body":"","link":"https://yyczk.netlify.app/tags/index/","section":"tags","tags":null,"title":"index"}]